%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: 5d409ea383417324bafa2ad8119d2992, type: 3}
  m_Name: 8_StrategyText_Data
  m_EditorClassIdentifier: 
  m_Title: Strategy
  m_TextPages:
  - "The <b>strategy pattern</b> separates algorithms into different classes so that
    they are interchangeable at runtime. A  client object can thus reference the
    strategy and switch behaviors without modifying its own code. \r\n\r\nEach strategy
    is stored in its own smaller, encapsulated classes. This makes the application
    easier to extend and maintain."
  - 'In this demo, each special ability is defined in its own subclass of an abstract
    <b>Ability</b>. As the player builds up a "win streak" by grabbing collectibles,
    the UI can update depending on gameplay.


    Another component changes the
    available "perk" based on the counter at runtime. Each special ability is now
    a strategy object that be interchanged flexibly and on the fly.'
  - 'Because each strategy is a separate class with its individual gameplay logic,
    adding or changing special abilities does not affect the client.


    Simply
    interchange the strategy to modify the client behavior.'
  m_CurrentIndex: 0
  m_AdditionalText: Use the <b>WASD</b> keys to collect the pickups and update the
    strategy.
  m_FooterText: 'Press <b>R</b> to reset the scene. '
